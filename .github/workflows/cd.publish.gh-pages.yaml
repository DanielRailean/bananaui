name: '[CD] DeployPages'

on:
  workflow_dispatch:
  push:
    branches:
    - main
  pull_request:

jobs:
  publish:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: yarn install
        working-directory: ui
        run: yarn
      
      - name: build
        working-directory: ui
        run: yarn build

      - shell: bash
        run: |
          # The following 2 lines are not really necessary,
          # because we do not intend to push current branch.
          # But we choose to use target branch name as a temporary local work branch,
          # thus avoid a potential error of committing to the trigger branch.
          git branch -f pages HEAD
          git checkout pages

          # The commit and push happen to work without authentication
          # https://docs.github.com/en/actions/reference/authentication-in-a-workflow
          git config user.name "Github Pages Overwriter"
          git config user.email "GithubPagesOverwriter@users.noreply.github.com"

          # The previous commit message may contain reference to github issues,
          # we wipe it out, so that it won't show up in the inevitable duplicate commit.
          git commit --amend -m "This commit will be automatically published"

          # Generate such a new file to make sure the subsequent commit would succeed
          # Such a file WITHOUT leading dot (.) is also visible in outcome website.
          # FYI: filename with leading dot (.) or underscore (_) would be ignored by Jekyll,
          # which Github Pages depends on. So we use a normal filename here.
          date > ui/build/publish_date.txt

          git add --force pages
          git commit -m "Automated publish"

      - name: Push the build output to github pages
        shell: bash
        ##if: ${{ inputs.source-directory == '.' }}
        # Astonishedly, the "if" command does not work in an action shipped to marketplace,
        # so that there is even a 3rd-party github action to do that
        # (https://github.com/marketplace/actions/conditional-value-for-github-action)
        # But that seems like an overkill. So, we'd use "if" in bash instead.
        run: git push -f origin `git subtree split -P ui/build`:refs/heads/pages